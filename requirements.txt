# Warning
import warnings
warnings.simplefilter(action='ignore', category=FutureWarning)

# Operating System libraries
import os 
import sys
import subprocess 
import zipfile 

# # Date and time libraries
# import time
# import datetime

# Scientific Python libraries
import numpy as np
import pandas as pd
import scipy.stats as stats
import scipy.stats as scipystats
import statsmodels.api as sm
import statsmodels.formula.api as smf
from statsmodels.stats.outliers_influence import variance_inflation_factor
# import itertools
# from itertools import chain, combinations
import statsmodels.stats.stattools as stools
import copy
import math

# Scientific Python libraries
import numpy as np
import pandas as pd

# Visualization libraries
import seaborn as sns
sns.set_theme()
import matplotlib.pyplot as plt
%matplotlib inline


# Scraping and text libraries
import requests 
import re 

# Machine Learning #############################################################

# Sklearn metrics
from sklearn import metrics
from sklearn.metrics import r2_score

# K-fold Cross Validation
import sklearn
from sklearn.model_selection import GridSearchCV

# Regression metrics
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score, cross_val_predict, cross_validate
from sklearn.model_selection import ShuffleSplit


# PCA (Principal Component Analysis)
from sklearn.decomposition import PCA

# Regressions --------------------------------------------------------
## Multiple linear regression
from sklearn.linear_model import LinearRegression

## Stepwise variable selection
from sklearn.feature_selection import SequentialFeatureSelector
from sklearn.feature_selection import RFE

## Ridge Regression
from sklearn.linear_model import Ridge

## Lasso Regression
from sklearn.linear_model import Lasso

## Elastic net Regression
from sklearn.linear_model import ElasticNet

## Principal Component Regression (PCR)
from sklearn.decomposition import PCA 
from sklearn.preprocessing import scale


## KNN (K Nearest Neighbors)
from sklearn.neighbors import KNeighborsRegressor

## Decision tree
from sklearn import tree
from sklearn.tree import DecisionTreeRegressor


## Boosting
from sklearn import datasets, ensemble
from sklearn.ensemble import GradientBoostingRegressor

## XG Boosting
try: 
    from xgboost import XGBRegressor
except:
    !pip install xgboost
    from xgboost import XGBRegressor

## Neural Networks
from sklearn.neural_network import MLPClassifier
from sklearn import preprocessing
from sklearn.datasets import make_classification
from sklearn.metrics import *
from inspect import signature
from sklearn.neural_network import MLPRegressor

## Random forest
from sklearn.ensemble import RandomForestRegressor
